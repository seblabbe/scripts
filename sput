#!/bin/bash
#
# EXAMPLES (from rsync man page):
#
#     rsync -Cavz . arvidsjaur:backup
#     
#     get:
#            rsync -avuzb --exclude '*~' samba:samba/ .
#     put:
#            rsync -Cavuzb . samba:samba/
#     sync: get put
#
# EXAMPLES (from Arnaud Casteigts):
#
#     rsync -qzac --rsh=ssh --progress --delete --delete-excluded --force
# 
# QUELQUES OPTIONS DE RSYNC:
#
#     -v, --verbose               increase verbosity
#     -q, --quiet                 suppress non-error messages
#     -a, --archive               archive mode; same as -rlptgoD (no -H)
#     -z, --compress              compress file data during the transfer
#     -c, --checksum              skip based on checksum, not mod-time & size
#         --delete                delete extraneous files from dest dirs
#         --delete-excluded       also delete excluded files from dest dirs
#         --force                 force deletion of dirs even if not empty
#         --progress              show progress during transfer
#     -b, --backup                make backups (see --suffix & --backup-dir)
#     -u, --update                skip files that are newer on the receiver
#     -C, --cvs-exclude           auto-ignore files in the same way CVS does
#     -n, --dry-run               show what would have been transferred
#
# COMMENTAIRES:
#
#     L'option -c (checksum) prend 1min36s versus seulement 3s.
#

# 29 janvier 2017: Added some checks to avoid erasing something on the server.

# The idea is that the file .last contains as first line the name of the
# computer that most recently pushed to the server. Other lines of the same
# file contains name of computers that called a sget on the server.

# TODO: Should we use the option -u ?
# 
# TODO: Changer le get pour qu'il ajoute une ligne au fichier .last du serveur.

THIS=`uname -n`
if ! ssh labri cat Documents/.last | grep --quiet "$THIS"
then
    echo "ERROR: Other computers pushed changes to the server."
    echo "ERROR: You need to sget and merge those changes in order to sput them."
    exit 1
else
    echo "Local machine is up-to-date with the server: we can proceed with the sput."
fi

OPTIONS="-za --rsh=ssh --progress --delete --delete-excluded --force"

if [[ ! -z $1 && $1 == "-f" ]]; then
    uname -n > $HOME/Documents/.last
    echo "Forced Synchronization $THIS -> server"
    rsync $OPTIONS $HOME/Documents/ labri:Documents/
else
    echo "Running rsync command in dry-run mode ..."
    rsync $OPTIONS --dry-run $HOME/Documents/ labri:Documents/
    echo -n "Proceed with rsync (y/n)? "
    read answer
    if echo "$answer" | grep -iq "^y" ;then
	echo "You answered Yes."
	echo "We change the .last file ..."
	uname -n > $HOME/Documents/.last
	echo "We proceed with the rsync command: $THIS -> server ..."
	rsync $OPTIONS $HOME/Documents/ labri:Documents/
    else
	echo "You answered No. Aborting."
	exit 1
    fi
fi

